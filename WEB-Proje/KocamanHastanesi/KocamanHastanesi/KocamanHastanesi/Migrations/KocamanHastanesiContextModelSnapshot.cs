// <auto-generated />
using System;
using KocamanHastanesi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KocamanHastanesi.Migrations
{
    [DbContext(typeof(KocamanHastanesiContext))]
    partial class KocamanHastanesiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("KocamanHastanesi.Models.doktor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("poliklinikid")
                        .HasColumnType("int");

                    b.Property<string>("sifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("poliklinikid");

                    b.ToTable("doktor");
                });

            modelBuilder.Entity("KocamanHastanesi.Models.hasta", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("hasta");
                });

            modelBuilder.Entity("KocamanHastanesi.Models.hastane", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ilceID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ilceID");

                    b.ToTable("hastane");
                });

            modelBuilder.Entity("KocamanHastanesi.Models.il", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("il");
                });

            modelBuilder.Entity("KocamanHastanesi.Models.ilce", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("ilID")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("ilID");

                    b.ToTable("ilce");
                });

            modelBuilder.Entity("KocamanHastanesi.Models.poliklinik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("hastaneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("hastaneId");

                    b.ToTable("poliklinik");
                });

            modelBuilder.Entity("KocamanHastanesi.Models.randevu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("doktorID")
                        .HasColumnType("int");

                    b.Property<int>("hastaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("tarih")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("doktorID");

                    b.HasIndex("hastaID");

                    b.ToTable("randevu");
                });

            modelBuilder.Entity("KocamanHastanesi.Models.doktor", b =>
                {
                    b.HasOne("KocamanHastanesi.Models.poliklinik", "poliklinik")
                        .WithMany("Doktorlar")
                        .HasForeignKey("poliklinikid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("poliklinik");
                });

            modelBuilder.Entity("KocamanHastanesi.Models.hastane", b =>
                {
                    b.HasOne("KocamanHastanesi.Models.ilce", "ilce")
                        .WithMany("hastaneler")
                        .HasForeignKey("ilceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ilce");
                });

            modelBuilder.Entity("KocamanHastanesi.Models.ilce", b =>
                {
                    b.HasOne("KocamanHastanesi.Models.il", "il")
                        .WithMany("ilceler")
                        .HasForeignKey("ilID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("il");
                });

            modelBuilder.Entity("KocamanHastanesi.Models.poliklinik", b =>
                {
                    b.HasOne("KocamanHastanesi.Models.hastane", "hastane")
                        .WithMany("poliklinikler")
                        .HasForeignKey("hastaneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hastane");
                });

            modelBuilder.Entity("KocamanHastanesi.Models.randevu", b =>
                {
                    b.HasOne("KocamanHastanesi.Models.doktor", "doktor")
                        .WithMany()
                        .HasForeignKey("doktorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KocamanHastanesi.Models.hasta", "hasta")
                        .WithMany("randevular")
                        .HasForeignKey("hastaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("doktor");

                    b.Navigation("hasta");
                });

            modelBuilder.Entity("KocamanHastanesi.Models.hasta", b =>
                {
                    b.Navigation("randevular");
                });

            modelBuilder.Entity("KocamanHastanesi.Models.hastane", b =>
                {
                    b.Navigation("poliklinikler");
                });

            modelBuilder.Entity("KocamanHastanesi.Models.il", b =>
                {
                    b.Navigation("ilceler");
                });

            modelBuilder.Entity("KocamanHastanesi.Models.ilce", b =>
                {
                    b.Navigation("hastaneler");
                });

            modelBuilder.Entity("KocamanHastanesi.Models.poliklinik", b =>
                {
                    b.Navigation("Doktorlar");
                });
#pragma warning restore 612, 618
        }
    }
}
